// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// h5createDataset1
void h5createDataset1(std::string h5file, std::string ds_name, std::vector<int> dims, std::string storage_mode, std::vector<int> chunk_dims, int compressor, int nLevel);
RcppExport SEXP singleCell_h5createDataset1(SEXP h5fileSEXP, SEXP ds_nameSEXP, SEXP dimsSEXP, SEXP storage_modeSEXP, SEXP chunk_dimsSEXP, SEXP compressorSEXP, SEXP nLevelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type h5file(h5fileSEXP);
    Rcpp::traits::input_parameter< std::string >::type ds_name(ds_nameSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type dims(dimsSEXP);
    Rcpp::traits::input_parameter< std::string >::type storage_mode(storage_modeSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type chunk_dims(chunk_dimsSEXP);
    Rcpp::traits::input_parameter< int >::type compressor(compressorSEXP);
    Rcpp::traits::input_parameter< int >::type nLevel(nLevelSEXP);
    h5createDataset1(h5file, ds_name, dims, storage_mode, chunk_dims, compressor, nLevel);
    return R_NilValue;
END_RCPP
}
// h5write1
bool h5write1(Rcpp::NumericMatrix data, std::string filename, std::string ds_name, std::vector<int> colIndx);
RcppExport SEXP singleCell_h5write1(SEXP dataSEXP, SEXP filenameSEXP, SEXP ds_nameSEXP, SEXP colIndxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type ds_name(ds_nameSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type colIndx(colIndxSEXP);
    rcpp_result_gen = Rcpp::wrap(h5write1(data, filename, ds_name, colIndx));
    return rcpp_result_gen;
END_RCPP
}
// h5read1
NumericVector h5read1(std::string filename, std::string ds_name, std::vector<int> colIndx);
RcppExport SEXP singleCell_h5read1(SEXP filenameSEXP, SEXP ds_nameSEXP, SEXP colIndxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type ds_name(ds_nameSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type colIndx(colIndxSEXP);
    rcpp_result_gen = Rcpp::wrap(h5read1(filename, ds_name, colIndx));
    return rcpp_result_gen;
END_RCPP
}
